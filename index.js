//load env
require("dotenv").config();

const db = require("./queries");
const VkBot = require("node-vk-bot-api");
const Markup = require("node-vk-bot-api/lib/markup");

const bot = new VkBot({
	token: process.env.VK_BOT,
	execute_timeout: process.env.EXECUTE_TIMEOUT, // in ms   (50 by default)
	polling_timeout: process.env.POLLING_TIMEOUT, // in secs (25 by default)
});

bot.use(async (ctx, next) => {
	try {
		await next();
	} catch (e) {
		console.error(e);
	}
});

// 1 - 35-37
// 2 - 38-39
// 3 - 40-42
// 4 - 43-44
// 5 - 45-47
// 6 - 48 –∏ –≤—ã—à–µ
// 7 - –ø–µ—Ä–≤–æ–∫—É—Ä—Å–Ω–∏–∫ –±–∞–∫–∞–ª–∞–≤—Ä –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Ç–µ—Ç
// 8 - –ø–µ—Ä–≤–æ–∫—É—Ä—Å–Ω–∏–∫ –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞
// 9 - —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è
bot.command("–°—Ç–∏–ø–µ–Ω–¥–∏—è", (ctx) => {
	const id = ctx.message.from_id;

	db.getStudent(id).then(async (student) => {
		let text = "";
		let keyboard = null;

		if (student) {
			await db.getSchoolarship().then(async (schoolarship) => {
				if (schoolarship.length) {
					text += "\n\n–°—Ç–∏–ø–µ–Ω–¥–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞–º –ø–µ—Ä–≤–æ–≥–æ —Å–µ–º–µ—Å—Ç—Ä–∞:";
					text += `\n‚Ä¢ –ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç      | ${schoolarship[7].value} ‚ÇΩ`;
					text += `\n‚Ä¢ –°–ø–µ—Ü–∏–∞–ª–∏—Ç–µ—Ç     | ${schoolarship[7].value} ‚ÇΩ`;
					text += `\n‚Ä¢ –ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞   | ${schoolarship[6].value} ‚ÇΩ`;

					text +=
						"\n\n–°—Ç–∏–ø–µ–Ω–¥–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞–º –≤—Ç–æ—Ä–æ–≥–æ –∏ –±–æ–ª–µ–µ —Å—Ç–∞—Ä—à–∏—Ö —Å–µ–º–µ—Å—Ç—Ä–æ–≤:";
					text += "\n–†–µ–π—Ç–∏–Ω–≥ | –°—Ç–∏–ø–µ–Ω–¥–∏—è";
					text += `\n35-37     | ${schoolarship[0].value} ‚ÇΩ`;
					text += `\n38-39     | ${schoolarship[1].value} ‚ÇΩ`;
					text += `\n40-42     | ${schoolarship[2].value} ‚ÇΩ`;
					text += `\n43-44     | ${schoolarship[3].value} ‚ÇΩ`;
					text += `\n45-47     | ${schoolarship[4].value} ‚ÇΩ`;
					text += `\n>48         | ${schoolarship[5].value} ‚ÇΩ`;

					text += `\n\n–°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç–∏–ø–µ–Ω–¥–∏—è: ${schoolarship[8].value} ‚ÇΩ`;

					keyboard = Markup.keyboard([
						Markup.button({
							action: {
								type: "open_app",
								app_id: "7010368",
								label: "–£–∑–Ω–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥",
								payload: JSON.stringify({
									button:
										"–£–ø—Å!üòí –ö–∞–∂–µ—Ç—Å—è, —Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è –í–ö –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏...\n\n–û—Ç–∫—Ä–æ–π—Ç–µ –º–æ–¥—É–ª–∏ –≤—Ä—É—á–Ω—É—é!\nhttps://vk.com/stankin.moduli",
								}),
								hash: "marks",
							},
						}),
					]).inline();
				} else text += "–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–∏–ø–µ–Ω–¥–∏—è—Ö";
			});
		} else text += "–í–∞—Å –Ω–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ:\nhttps://vk.com/stankin.moduli";

		ctx.reply(text, null, keyboard);
	});
});

bot.command("–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è —Å—Ç–∏–ø–µ–Ω–¥–∏—è", (ctx) => {
	const id = ctx.message.from_id;

	const { text, keyboard } = placeholder();

	ctx.reply(text, null, keyboard);
});

bot.command("–°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç–∏–ø–µ–Ω–¥–∏—è", (ctx) => {
	const id = ctx.message.from_id;

	const { text, keyboard } = placeholder();

	ctx.reply(text, null, keyboard);
});

function placeholder() {
	return {
		keyboard: Markup.keyboard([Markup.button("–°—Ç–∏–ø–µ–Ω–¥–∏—è", "secondary")], {
			columns: 1,
		}),
		text:
			'–¢–µ–ø–µ—Ä—å, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–∏–ø–µ–Ω–¥–∏—è—Ö –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å "–°—Ç–∏–ø–µ–Ω–¥–∏—è"!',
	};
}

bot.command("–ù–∞—á–∞—Ç—å", (ctx) => {
	const keyboard = Markup.keyboard(
		[Markup.button("–°—Ç–∏–ø–µ–Ω–¥–∏—è", "secondary")],
		{
			columns: 1,
		}
	);

	ctx.reply("–°–¢–ê–ù–ö–ò–ù –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç!", null, keyboard);
});

bot.startPolling();
